buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
	}
}

plugins {
	id "com.matthewprenger.cursegradle" version "1.0.7"
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = version_major + '.' + version_minor + '.' + version_patch
group= "mezz.JEIAddons" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "JEIAddons_" + mcversion

if (System.getenv().BUILD_NUMBER != null) {//adds the build number to the end of the version string if on a build server
	version += ".${System.getenv().BUILD_NUMBER}"
}

// java version
sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
	version = mcversion + "-" + forgeversion
	runDir = "run"

	replace '@VERSION@', project.version

	mappings = "snapshot_20151217"

	useDepAts = true
}

repositories {
	maven {
		url "http://dvs1.progwml6.com/files/maven"
	}
	ivy {
		name "Thaumcraft"
		artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-${mcversion}-[revision]-deobf.[ext]"
	}
//	ivy {
//		name "Aroma1997Core"
//		artifactPattern "http://addons-origin.cursecdn.com/files/2232/553/[module]-${mcversion}-[revision].[ext]"
//	}
//	ivy {
//		name "Aroma1997Core"
//		artifactPattern "http://files.aroma1997.org/mcmods/aroma1997core/version/[module]-${mcversion}-[revision]-deobf.[ext]"
//	}
}

dependencies {
	deobfCompile "mezz.jei:jei_${mcversion}:${jei_version}"
	deobfCompile name: 'Thaumcraft', version: "${thaumcraft_version}", ext: 'jar'
//	deobfCompile name: 'Aroma1997Core', version: "${aroma1997core_version}", ext: 'jar'
}

processResources
{
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

curseforge {
	apiKey = project.hasProperty('curseforge_apikey') ? project.curseforge_apikey : '0'
	project {
		id = curse_project_id
		changelog = 'Automatically uploaded. See https://github.com/mezz/JEIAddons/commits/'
		releaseType = 'beta'
		relations {
			requiredLibrary 'just-enough-items-jei'
		}
	}
}

// prevent java 8's strict doclint for javadocs from failing builds
allprojects {
	tasks.withType(Javadoc) {
		options.addStringOption('Xdoclint:none', '-quiet')
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier = 'sources'
}

artifacts {
	archives javadocJar
	archives sourcesJar
}

task("uploadJars", dependsOn: "build") {
	description = "uploads JARs"
	if (project.hasProperty("local_maven")) {
		apply plugin: 'maven'
		uploadArchives {
			repositories {
				mavenDeployer {
					repository(url: "file://${local_maven}")
				}
			}
		}
	}
}
